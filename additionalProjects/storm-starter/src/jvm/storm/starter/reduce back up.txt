public void reduceRDD() {
    HashMap<String,String> addEdgeMap = new HashMap<>(); // as we will not care about order once we are finished
    HashMap<String,String> addNodeMap = new HashMap<>(); 
    HashMap<String,String> rmvEdgeMap = new HashMap<>(); 
    HashMap<String,String> rmvNodeMap = new HashMap<>();
    
    for (int i =commands.size();i>0;i--) {
      String commandFull = commands.get(i).getString(0);
      String[] split = commandFull.split(" ");
      String num = split[0];
      String command = split[1];
      String src = split[2];
      String msg = "";
      String dest ="";
      if(split.length > 3) {
       msg  = split[2];
       dest = split[3];
      }
      if (command == "addEdge") {
        if (rmvNodeMap.get("rmvNode " + src)!=null) {
          // check if the src Id is removed lower down
          if (rmvNodeMap.get("rmvNode " + dest)==null) {
            // if it is then we check if the dest node is also removed, otherwise add it
            addNodeMap.put("addNode " + dest, num + " addNode " + dest);
          }
        }

        else if (rmvNodeMap.get("rmvNode " + dest)!=null) {
          // check if the dest Id is removed lower down
          addNodeMap.put("addNode " + src, num + " addNode " + src); // no need to check src rmv as we know it is not there from above
        }

        else if (rmvEdgeMap.get("rmvEdge " + src + " " + msg + " " + dest)!=null) {
          addNodeMap.put("addNode " + src, num + " addNode " + src); //no need to check if they are negated as it is checked above
          addNodeMap.put("addNode " + dest, num + ".5 addNode " + dest); //.5 command as the singular is split into 2
        }
        else {
          //if there are no remove nodes or edges then we can add the command to the subset
          addEdgeMap.put("addEdge " + src + " " + msg + " " + dest,command);
        }
      }
      //------------------Check if Add Node command happens later or is negated by a remove ------------------//
      else if (command == "addNode") {
        if (rmvNodeMap.get("rmvNode " + src)!=null) {
          addNodeMap.put("addNode"+src,command);
        }
      }
      //------------------Check if Remove edge command happens later or is negated by an add ------------------//
      else if (command == "rmvEdge" ) {
        if (addEdgeMap.get("addEdge " + src + " " + msg + " " + dest)!=null) {} // check if it is negated
        else if (rmvNodeMap.get("rmvNode " + src)!=null) {} // check if negated by a node remove below
        else if (rmvNodeMap.get("rmvNode " + dest)!=null) {} // check if negated by a node remove below
        else {rmvEdgeMap.put("rmvEdge " + src + " " + msg + " " + dest,command);}
        }

      //------------------Check if Remove node command happens later ------------------//
      else if (command == "rmvNode") {
          //rmv can't be negated as it removes all edges

          rmvNodeMap.put("rmvNode " + src,command); //again as set no need to check if contains
        }

    }
    

  }


}